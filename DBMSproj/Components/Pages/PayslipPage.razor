@page "/PayslipPage"
@using DBMSproj.Models
@using DBMSproj.Services
@inject PayslipService PayslipService
@inject IJSRuntime JSRuntime
@rendermode InteractiveServer
<h3>Employee Payslip</h3>

<div class="form-group row mb-3">
    <label for="employeeId" class="col-sm-2 col-form-label">Employee ID:</label>
    <div class="col-sm-4">
        <input type="number" class="form-control" id="employeeId" @bind="employeeId" />
    </div>
    <div class="col-sm-2">
        <button class="btn btn-primary" @onclick="GetPayslips">View Payslips</button>
    </div>
</div>

@if (payslips != null)
{
    if (payslips.Any())
    {
        <div class="table-responsive">
            <table class="table table-striped table-bordered">
                <thead class="table-dark">
                    <tr>
                        <th>Payslip ID</th>
                        <th>Payment Date</th>
                        <th>Basic Salary</th>
                        <th>Deductions</th>
                        <th>Net Salary</th>
                        <th>Transaction ID</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var payslip in payslips)
                    {
                        <tr>
                            <td>@payslip.payslipID</td>
                            <td>@payslip.payment_date.ToString("yyyy-MM-dd")</td>
                            <td>@payslip.basic_salary.ToString("C")</td>
                            <td>@payslip.deduction.ToString("C")</td>
                            <td>@payslip.net_salary.ToString("C")</td>
                            <td>@payslip.TransactionID</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
    else
    {
        <div class="alert alert-info mt-3">No payslips found for this employee.</div>
    }
}

@code {
    private int employeeId;
    private List<Payslip> payslips;

    private async Task GetPayslips()
    {
        try
        {
            if (employeeId <= 0)
            {
                await JSRuntime.InvokeVoidAsync("alert", "Please enter a valid Employee ID");
                return;
            }

            payslips = await PayslipService.GetPayslipsByEmployeeIdAsync(employeeId);
        }
        catch (Exception ex)
        {
            await JSRuntime.InvokeVoidAsync("console.error", ex.Message);
            await JSRuntime.InvokeVoidAsync("alert", $"Error loading payslips: {ex.Message}");
        }
    }
}